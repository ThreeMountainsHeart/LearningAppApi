version: '3.7'
services:
  redis:
    image: redis:6.0.7
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"

  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis_insight
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - redis
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    links:
      - zookeeper:zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
      # docker exec -it kafka /bin/sh
      # cd opt/kafka_2.13-2.8.1/bin

  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  kibana:
    container_name: kibana
    image: kibana:8.8.0
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
networks:
  learning-app-network:
    driver: bridge